export const COMMON_PROPERTIES$1 = {
  name: 'name-editor',
  keyNameEnabled: 'keyNameEnabled-editor',
  keyName: 'keyName-editor',
  objectName: 'objectName-editor',
  label: 'label-editor',
  labelAlign: 'labelAlign-editor',
  type: 'type-editor',
  defaultValue: 'defaultValue-editor',
  placeholder: 'placeholder-editor',
  startPlaceholder: 'startPlaceholder-editor',
  endPlaceholder: 'endPlaceholder-editor',
  columnWidth: 'columnWidth-editor',
  autoFullWidth: 'autoFullWidth-editor',
  size: 'size-editor',
  controls: 'controls-editor',
  controlsPosition: 'controlsPosition-editor',
  showStops: 'showStops-editor',
  displayStyle: 'displayStyle-editor',
  buttonStyle: 'buttonStyle-editor',
  border: 'border-editor',
  labelWidth: 'labelWidth-editor',
  labelHidden: 'labelHidden-editor',
  labelWrap: 'labelWrap-editor',
  rows: 'rows-editor',
  autosize: 'autosize-editor',
  required: 'required-editor',
  requiredHint: 'requiredHint-editor',
  validation: 'validation-editor',
  validationHint: 'validationHint-editor',
  readonly: 'readonly-editor',
  disabled: 'disabled-editor',
  hidden: 'hidden-editor',
  clearable: 'clearable-editor',
  editable: 'editable-editor',
  showPassword: 'showPassword-editor',
  textContent: 'textContent-editor',
  textAlign: 'textAlign-editor',
  fontSize: 'fontSize-editor',
  preWrap: 'preWrap-editor',
  htmlContent: 'htmlContent-editor',
  format: 'format-editor',
  valueFormat: 'valueFormat-editor',
  filterable: 'filterable-editor',
  allowCreate: 'allowCreate-editor',
  remote: 'remote-editor',
  automaticDropdown: 'automaticDropdown-editor',
  checkStrictly: 'checkStrictly-editor',
  showAllLevels: 'showAllLevels-editor',
  multiple: 'multiple-editor',
  multipleLimit: 'multipleLimit-editor',
  collapseTags: 'collapseTags-editor',
  contentPosition: 'contentPosition-editor',
  optionItems: 'optionItems-editor',
  uploadURL: 'uploadURL-editor',
  uploadTip: 'uploadTip-editor',
  withCredentials: 'withCredentials-editor',
  multipleSelect: 'multipleSelect-editor',
  limit: 'limit-editor',
  fileMaxSize: 'fileMaxSize-editor',
  fileTypes: 'fileTypes-editor',
  contentHeight: 'contentHeight-editor',
  tabType: 'tabType-editor',
  tabPosition: 'tabPosition-editor',
  // customClass: 'customClass-editor',
  showCheckBox: 'show-checkbox-editor',
  filter: 'show-filter-editor',
  defaultExpandAllNode: 'tree-defaultExpandAllNode-editor',
  expandRetractAllNode: 'tree-expandRetractAllNode-editor',
  selectClearAllNode: 'tree-selectClearAllNode-editor',
  expandOnClickNode: 'show-expandOnClickNode-editor',
  nodeEdit: 'tree-nodeEdit-editor',
  draggable: 'show-draggable-editor',
  lazy: 'tree-lazy-editor',
  treeDataEdit: 'treeData-editor',
  formulaEnabled: 'formulaEnabled-editor',
  formula: 'formula-editor',
  showBlankRow: 'showBlankRow-editor',
  showRowNumber: 'showRowNumber-editor',
  actionColumnPosition: 'actionColumnPosition-editor',
  cellWidth: 'cellWidth-editor',
  cellHeight: 'cellHeight-editor',
  colHeight: 'colHeight-editor',
  wordBreak: 'wordBreak-editor',
  gutter: 'gutter-editor',
  responsive: 'responsive-editor',
  span: 'span-editor',
  offset: 'offset-editor',
  push: 'push-editor',
  pull: 'pull-editor',
  title: 'title-editor',
  width: 'width-editor',
  fullscreen: 'fullscreen-editor',
  showModal: 'showModal-editor',
  showClose: 'showClose-editor',
  closeOnClickModal: 'closeOnClickModal-editor',
  closeOnPressEscape: 'closeOnPressEscape-editor',
  center: 'center-editor',
  direction: 'direction-editor',
  readMode: 'readMode-editor',
  disabledMode: 'disabledMode-editor',
  okButtonLabel: 'okButtonLabel-editor',
  okButtonHidden: 'okButtonHidden-editor',
  cancelButtonLabel: 'cancelButtonLabel-editor',
  cancelButtonHidden: 'cancelButtonHidden-editor'
}
export const ADVANCED_PROPERTIES$1 = {
  min: 'min-editor',
  max: 'max-editor',
  precision: 'precision-editor',
  step: 'step-editor',
  minLength: 'minLength-editor',
  maxLength: 'maxLength-editor',
  showWordLimit: 'showWordLimit-editor',
  prefixIcon: 'prefixIcon-editor',
  suffixIcon: 'suffixIcon-editor',
  switchWidth: 'switchWidth-editor',
  activeText: 'activeText-editor',
  inactiveText: 'inactiveText-editor',
  activeColor: 'activeColor-editor',
  inactiveColor: 'inactiveColor-editor',
  lowThreshold: 'lowThreshold-editor',
  highThreshold: 'highThreshold-editor',
  allowHalf: 'allowHalf-editor',
  showText: 'showText-editor',
  showScore: 'showScore-editor',
  range: 'range-editor',
  vertical: 'vertical-editor',
  plain: 'plain-editor',
  round: 'round-editor',
  circle: 'circle-editor',
  icon: 'icon-editor',
  labelIconClass: 'labelIconClass-editor',
  labelIconPosition: 'labelIconPosition-editor',
  labelTooltip: 'labelTooltip-editor',
  appendButton: 'appendButton-editor',
  appendButtonDisabled: 'appendButtonDisabled-editor',
  buttonIcon: 'buttonIcon-editor',
  appendText: 'appendText-editor',
  textForAppend: 'textForAppend-editor'
}
export const EVENT_PROPERTIES$1 = {
  onCreated: 'onCreated-editor',
  onMounted: 'onMounted-editor',
  onClick: 'onClick-editor',
  onInput: 'onInput-editor',
  onChange: 'onChange-editor',
  onFocus: 'onFocus-editor',
  onBlur: 'onBlur-editor',
  onRemoteQuery: 'onRemoteQuery-editor',
  onBeforeUpload: 'onBeforeUpload-editor',
  onUploadSuccess: 'onUploadSuccess-editor',
  onUploadError: 'onUploadError-editor',
  onFileRemove: 'onFileRemove-editor',
  onValidate: 'onValidate-editor',
  onAppendButtonClick: 'onAppendButtonClick-editor',
  onTabClick: 'onTabClick-editor',
  onSubFormRowAdd: 'onSubFormRowAdd-editor',
  onSubFormRowInsert: 'onSubFormRowInsert-editor',
  onSubFormRowDelete: 'onSubFormRowDelete-editor',
  onSubFormRowChange: 'onSubFormRowChange-editor',
  onPageSizeChange: 'onPageSizeChange-editor',
  onCurrentPageChange: 'onCurrentPageChange-editor',
  onSortChange: 'onSortChange-editor',
  onSelectionChange: 'onSelectionChange-editor',
  onHideOperationButton: 'onHideOperationButton-editor',
  onDisableOperationButton: 'onDisableOperationButton-editor',
  onGetOperationButtonLabel: 'onGetOperationButtonLabel-editor',
  onOperationButtonClick: 'onOperationButtonClick-editor',
  onHeaderClick: 'onHeaderClick-editor',
  onRowClick: 'onRowClick-editor',
  onRowDoubleClick: 'onRowDoubleClick-editor',
  onCellClick: 'onCellClick-editor',
  onCellDoubleClick: 'onCellDoubleClick-editor',
  onGetRowClassName: 'onGetRowClassName-editor',
  onGetSpanMethod: 'onGetSpanMethod-editor',
  onOkButtonClick: 'onOkButtonClick-editor',
  onCancelButtonClick: 'onCancelButtonClick-editor',
  onDialogOpened: 'onDialogOpened-editor',
  onDialogBeforeClose: 'onDialogBeforeClose-editor',
  onDrawerOpened: 'onDrawerOpened-editor',
  onDrawerBeforeClose: 'onDrawerBeforeClose-editor',
  onButtonGroupClick: 'onButtonGroupClick-editor',
  onNodeClick: 'onNodeClick-editor',
  onNodeCheck: 'onNodeCheck-editor',
  onNodeContextmenu: 'onNodeContextmenu-editor',
  onCheckChange: 'onCheckChange-editor'
}

export const zhLocale_extension = {
  extension: {
    widgetLabel: { card: '\u5361\u7247', alert: '\u63D0\u793A' },
    setting: {
      headerHidden: '\u9690\u85CF\u6807\u9898\u533A',
      cardFolded: '\u662F\u5426\u6536\u8D77',
      cardShowFold: '\u663E\u793A\u6298\u53E0\u6309\u94AE',
      cardWidth: '\u5361\u7247\u5BBD\u5EA6',
      cardShadow: '\u663E\u793A\u9634\u5F71',
      alertTitle: '\u6807\u9898',
      alertType: '\u7C7B\u578B',
      description: '\u8F85\u52A9\u6027\u6587\u5B57',
      closable: '\u662F\u5426\u53EF\u5173\u95ED',
      closeText: '\u5173\u95ED\u6309\u94AE\u6587\u5B57',
      center: '\u6587\u5B57\u5C45\u4E2D',
      showIcon: '\u663E\u793A\u56FE\u6807',
      effect: '\u663E\u793A\u6548\u679C'
    }
  }
}
export const enLocale_extension = {
  extension: {
    widgetLabel: { card: 'Card', alert: 'Alert' },
    setting: {
      headerHidden: 'Header Hidden',
      cardFolded: 'Folded',
      cardShowFold: 'Show Fold',
      cardWidth: 'Width Of Card',
      cardShadow: 'Shadow',
      alertTitle: 'Title',
      alertType: 'Type',
      description: 'Description',
      closable: 'Closable',
      closeText: 'Text On Close Btn',
      center: 'Center',
      showIcon: 'Show Icon',
      effect: 'Effect'
    }
  }
}
